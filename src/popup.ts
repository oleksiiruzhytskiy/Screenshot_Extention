document.getElementById("window")?.addEventListener("click", () => {
  navigator.mediaDevices
    .getDisplayMedia({
      video: {
        //@ts-ignore
        mediaSource: "screen", // –∏–ª–∏ "window", "screen" ‚Äî –¥–ª—è –≤—Å–µ–≥–æ —ç–∫—Ä–∞–Ω–∞, "window" ‚Äî –¥–ª—è –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
      },
    })
    .then((stream) => {
      const track = stream.getVideoTracks()[0];
      const imageCapture = new ImageCapture(track);

      imageCapture.grabFrame().then((imageBitmap) => {
        const canvas = document.createElement("canvas");
        const ctx = canvas.getContext("2d");
        if (!ctx) {
          console.error("‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ canvas.");
          return;
        }

        canvas.width = imageBitmap.width;
        canvas.height = imageBitmap.height;
        ctx.drawImage(imageBitmap, 0, 0);
        const dataUrl = canvas.toDataURL();

        // ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ `chrome.storage`
        chrome.storage.local.set({ screenshot: dataUrl }, () => {
          console.log("dataUrl", dataUrl);
          console.log("üì∑ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω!");

          // ‚úÖ –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ
          chrome.tabs.create({ url: "editor.html" });
        });

        track.stop();
      });
    })
    .catch((error) => {
      console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Ç–æ–∫–∞:", error);
    });
});
