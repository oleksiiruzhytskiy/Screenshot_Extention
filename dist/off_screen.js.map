{"version":3,"file":"off_screen.js","mappings":"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","sources":["webpack://screenshot_extention/./src/utils/logger.ts","webpack://screenshot_extention/webpack/bootstrap","webpack://screenshot_extention/webpack/runtime/define property getters","webpack://screenshot_extention/webpack/runtime/hasOwnProperty shorthand","webpack://screenshot_extention/./src/off_screen.ts","webpack://screenshot_extention/./src/variable_messages/variable.ts"],"sourcesContent":["export const log = (...args) => {\n    if (process.env.DEBUG === 'true') {\n        console.log('process.env.DEBUG', process.env.DEBUG);\n        console.log(...args);\n    }\n    else {\n        return;\n    }\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n// Импортируем функцию для логирования\nimport { log } from \"./utils/logger\";\nimport { captureScreen, screenshotCaptured } from \"./variable_messages/variable\";\n// Слушаем сообщения от других частей расширения\nchrome.runtime.onMessage.addListener((message, sender, sendResponse) => __awaiter(void 0, void 0, void 0, function* () {\n    // Проверяем, если действие \"captureScreen\" — начинаем захват экрана\n    if (message.action === captureScreen) {\n        log(\"⚡ Начинаем захват экрана...\");\n        try {\n            log(\"🔍 Получаем доступ к медиа-устройствам...\");\n            // Запрашиваем доступ к экрану через getDisplayMedia API\n            const stream = yield navigator.mediaDevices\n                .getDisplayMedia({\n                video: true, // Запрашиваем только видеопоток\n            })\n                .then((stream) => {\n                log(\"✅ Поток получен inside THEN:\", stream); // Логируем успешный ответ\n                log(\"📺 Тип экрана:\", stream.getVideoTracks()[0].getSettings().displaySurface // Логируем тип экрана (например, полный экран или окно)\n                );\n                return stream; // Возвращаем поток\n            })\n                .catch((err) => log(\"❌ Ошибка:\", err)); // Логируем ошибку в случае неудачи\n            log(\"Получен поток:\", stream); // Логируем поток\n            // Проверка, что поток был получен\n            if (!stream) {\n                log(\"❌ Не удалось получить поток.\");\n                return;\n            }\n            // Получаем первый видеотрек из потока\n            const track = stream.getVideoTracks()[0];\n            log(\"📹 Получен видео-трек:\", track); // Логируем видео-трек\n            // Создаем элемент canvas для захвата скриншота\n            const canvas = document.createElement(\"canvas\");\n            const ctx = canvas.getContext(\"2d\"); // Получаем контекст для рисования\n            if (!ctx) {\n                log(\"❌ Ошибка контекста canvas.\");\n                return;\n            }\n            // Создаем элемент video для воспроизведения потока\n            const videoElement = document.createElement(\"video\");\n            videoElement.srcObject = stream; // Устанавливаем источник видео как поток\n            videoElement.play(); // Запускаем воспроизведение\n            // Когда видео готово к загрузке данных, делаем скриншот\n            videoElement.onloadeddata = () => {\n                // Устанавливаем размеры canvas равными размерам видео\n                canvas.width = videoElement.videoWidth;\n                canvas.height = videoElement.videoHeight;\n                // Рисуем изображение с видео на canvas\n                ctx.drawImage(videoElement, 0, 0);\n                log(\"📷 Скриншот захвачен!\");\n                // Преобразуем canvas в data URL (скриншот) в формате JPEG с качеством 70%\n                const dataUrl = canvas.toDataURL(\"image/jpeg\", 0.7);\n                // Отправляем сообщение с данными скриншота\n                chrome.runtime.sendMessage({\n                    action: screenshotCaptured,\n                    dataUrl: dataUrl,\n                });\n                log(\"📤 Отправлено сообщение с данными скриншота.\");\n                // Останавливаем видео-трек через 500 мс, чтобы освободить ресурсы\n                setTimeout(() => {\n                    track.stop();\n                }, 500);\n                log(\"🛑 Остановлен видео-трек.\");\n            };\n        }\n        catch (error) {\n            // Логируем ошибку захвата экрана\n            log(\"❌ Ошибка захвата экрана:\", log);\n        }\n    }\n}));\n","export const captureScreen = \"captureScreen\";\nexport const requestCapture = \"requestCapture\";\nexport const captureError = \"captureError\";\nexport const screenshotCaptured = \"screenshotCaptured\";\n"],"names":["log","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","_regeneratorRuntime","e","t","r","n","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","chrome","runtime","onMessage","addListener","message","sender","sendResponse","thisArg","_arguments","P","generator","_callee","stream","track","canvas","ctx","videoElement","_context","action","navigator","mediaDevices","getDisplayMedia","video","getVideoTracks","getSettings","displaySurface","err","document","createElement","getContext","srcObject","play","onloadeddata","width","videoWidth","height","videoHeight","drawImage","dataUrl","toDataURL","sendMessage","setTimeout","t0","reject","fulfilled","step","rejected","result","apply"],"sourceRoot":""}